deepdive {

  schema.variables {
    candidates.is_true: Boolean
  }

  pipeline.run: all 

  pipeline.pipelines {
    all = [ create_candidates, one_link_is_true_works ] 
  }

  extraction.extractors {
    create_candidates: {
        style: sql_extractor #note removed CASCADE below
        sql: """DROP TABLE IF EXISTS candidates;
                CREATE TABLE candidates (id BIGINT, group_id INTEGER, target INTEGER, is_true BOOLEAN);
                INSERT INTO candidates VALUES (NULL, 1, 0, NULL);
                INSERT INTO candidates VALUES (NULL, 2, 0, NULL);
                INSERT INTO candidates VALUES (NULL, 2, 1, NULL);
                INSERT INTO candidates VALUES (NULL, 3, 0, NULL);
                INSERT INTO candidates VALUES (NULL, 3, 1, NULL);
                INSERT INTO candidates VALUES (NULL, 3, 2, NULL);
               """
    }
  }
  
  inference.factors {

    one_link_is_true_works {
     input_query = """
       SELECT c1.id as "candidates.c1.id", c1.is_true as "candidates.c1.is_true",
              c2.id as "candidates.c2.id", c2.is_true as "candidates.c2.is_true"
       FROM candidates c1, candidates c2
       WHERE c1.group_id = 2 AND c1.target = 0
       AND c2.group_id = 2 AND c2.target = 1
        """
     function: "And(candidates.c1.is_true, candidates.c2.is_true)"
     weight: 3
    }
  }

  db.default {
    driver   : "com.cloudera.impala.jdbc41.Driver"
    url      : "jdbc:impala://"${PGHOST}":"${PGPORT}"/"${DBNAME}
    user     : ${PGUSER}
    password : ${PGPASSWORD}
    dbname   : ${DBNAME}
    host     : ${PGHOST}
    port     : ${PGPORT}
  }

  sampler.sampler_args: "-l 0 -s 1 -i 1000 --alpha 0.1 -c 0"
}

